name: CI

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master

jobs:
  Build:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        jdk: [1.8, 11, 13]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2

      - name: Cache Maven Repository
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: maven-repository-${{ runner.os }}
          restore-keys: |
            maven-repository-

      - name: Set up JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}

      - name: Build and run Tests
        run: mvn -B clean verify

  Release:
    needs: Build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Set Release Version
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:11})

      - uses: actions/checkout@v2

      - name: Cache Maven Repository
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: maven-repository-${{ runner.os }}
          restore-keys: |
            maven-repository-

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Deploy
        env:
          MAVEN_DEPLOYMENT_USERNAME: ${{ secrets.MAVEN_DEPLOYMENT_USERNAME }}
          MAVEN_DEPLOYMENT_PASSWORD: ${{ secrets.MAVEN_DEPLOYMENT_PASSWORD }}
        run: mvn -B -Drevision="${{ env.RELEASE_VERSION }}" clean deploy -P release --settings ./settings.xml

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            Version ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
